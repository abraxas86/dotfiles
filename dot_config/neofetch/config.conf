##########################################
#      ULTRA FANCY NERDFONT NEOFETCH     #
##########################################

# Set sixel backend and logo
image_backend="sixel"
image_source="/home/abraxas/.config/neofetch/logo.jpg"
image_size="500px"

# Define Color Themes
theme1=(
    "\033[38;2;61;49;54m"  # FF3d3136
    "\033[38;2;148;48;48m" # FF943030
    "\033[38;2;219;158;72m" # FFdb9e48
    "\033[38;2;83;64;59m"  # FF53403b
    "\033[38;2;90;116;119m" # FF5a7477
    "\033[38;2;255;229;195m" # FFffe5c3
)

theme2=(
    "\033[38;2;70;66;94m"  # FF46425e
    "\033[38;2;21;120;140m" # FF15788c
    "\033[38;2;0;185;190m"  # FF00b9be
    "\033[38;2;255;238;204m" # FFffeecc
    "\033[38;2;255;176;163m" # FFffb0a3
    "\033[38;2;255;105;115m" # FFff6973
)

theme3=(
    "\033[38;2;65;29;49m"   # FF411d31
    "\033[38;2;99;27;52m"   # FF631b34
    "\033[38;2;50;83;95m"   # FF32535f
    "\033[38;2;11;138;143m" # FF0b8a8f
    "\033[38;2;14;175;155m" # FF0eaf9b
    "\033[38;2;48;225;185m" # FF30e1b9
)

# Choose Active Theme by changing this line
active_theme=("${theme2[@]}")

# Assign Color Variables for Easier Usage
COLOR1="${active_theme[0]}"
COLOR2="${active_theme[1]}"
COLOR3="${active_theme[2]}"
COLOR4="${active_theme[3]}"
COLOR5="${active_theme[4]}"
COLOR6="${active_theme[5]}"
RESET="\033[0m"

##########################################
#           Palette Display              #
##########################################
print_palette() {
    echo -e "${COLOR1}COLOR1${RESET} ${COLOR2}COLOR2${RESET} ${COLOR3}COLOR3${RESET} ${COLOR4}COLOR4${RESET} ${COLOR5}COLOR5${RESET} ${COLOR6}COLOR6${RESET}"
    echo -e "${COLOR1}██████${RESET} ${COLOR2}██████${RESET} ${COLOR3}██████${RESET} ${COLOR4}██████${RESET} ${COLOR5}██████${RESET} ${COLOR6}██████${RESET}"
    echo
}

##########################################
#              BAR Config                #
##########################################
bar_char_elapsed="█"
bar_char_total="░"
bar_border=off
bar_length=80
bar_color_elapsed=92
bar_color_total=200

# CPU
cpu_display=infobar
cpu_temp="C"

# GPU
refresh_rate="on"

# SDD/HDD
disk_show=('/')

bold="on"
battery_display="on"
disk_display="on"

memory_display=bar
disk_display=bar
battery_display=infobar

##########################################
#             Print Functions            #
##########################################

# Title and Welcome Message with Gradient and Animation Effects
print_title() {
    prin "\n"
    prin "${COLOR2}${RESET}"
}

# Grab some ASCII Art from fortune
print_asciiart() {
    art_output=$(/usr/bin/fortune ascii-art)
    alt_space=$(echo -e "\xC2\xA0")
    while IFS= read -r line; do
        formatted_line=$(echo "$line" | sed "s/ /$alt_space/g")
        prin "${COLOR3}$formatted_line${RESET}\n"
    done <<< "$art_output"
}

# System Information with Icons and Gradient
display_info() {
	installed_memory="$(grep MemTotal /proc/meminfo | awk '{print $2/1024 " MiB"}')"
    cpu_model=$(grep -m 1 'model name' /proc/cpuinfo | awk -F: '{print $2}' | sed 's/^ //')
    cpu_cores=$(grep -c '^processor' /proc/cpuinfo)
    cpu_speed=$(lscpu | grep 'max MHz' | awk '{printf "%.1f GHz", $3/1000}')
    cpu_temp=$(sensors | grep -m 1 'Package id 0' | awk '{print $4}' | sed 's/+//')
    
    prin $divider_top
    info "${COLOR6}┃ ${COLOR4}  OS⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀${RESET}" distro "${COLOR6}┃${RESET}"
    info "${COLOR6}┃ ${COLOR4}  Host⠀⠀ ⠀⠀⠀⠀⠀${RESET}" model
    info "${COLOR6}┃ ${COLOR4}  Kernel⠀⠀⠀⠀⠀⠀${RESET}" kernel
    info "${COLOR6}┃ ${COLOR4}祥 Uptime⠀⠀ ⠀⠀⠀${RESET}" uptime
    info "${COLOR6}┃ ${COLOR4}  Packages⠀⠀⠀⠀${RESET}" packages
    info "${COLOR6}┃ ${COLOR4}  Shell⠀⠀⠀⠀⠀⠀⠀${RESET}" shell
    info "${COLOR6}┃ ${COLOR4}  Resolution⠀⠀${RESET}" resolution
    info "${COLOR6}┃ ${COLOR4}﬿  WM⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀${RESET}" wm
    info "${COLOR6}┃ ${COLOR4}  Terminal⠀⠀⠀⠀${RESET}" term
    prin "${COLOR6}┃ ${COLOR4}  CPU⠀⠀⠀⠀⠀⠀⠀⠀⠀${RESET}" "$cpu_model ($cpu_cores) @ $cpu_speed [$cpu_temp]"
    info "${COLOR6}┃ ${COLOR4}  GPU⠀⠀⠀⠀⠀⠀⠀⠀⠀${RESET}" gpu
    prin "${COLOR6}┃ ${COLOR4}  Memory⠀⠀⠀⠀⠀⠀${RESET}" "$installed_memory"
    prin $divider_bottom
}

# Print MOTD fortune
print_motd() {
    prin $divider_top
    print_fortune
    prin $divider_bottom
}

# Get fortune
print_fortune() {
    fortune_output=$(fortune paradoxum -s -n 80 | fold -s -w 40)
    prin "${COLOR6}┃ ${COLOR4}  ⠀${COLOR5}$fortune_output${RESET}"
}

# Enable Public IP Address
print_local_ip() {
    info "${COLOR6}┃ ${COLOR4} Local IP⠀⠀⠀⠀${RESET}" local_ip
}
print_public_ip() {
    prin "${COLOR6}┃ ${COLOR4} Public IP⠀⠀⠀: 69.69.4.20${RESET}" 
}

# Include the Current Song Playing
print_song() {
    info "${COLOR6}┃ ${COLOR4}⠀Now Playing⠀${RESET}" song
}

# Add a Weather Forecast (requires wttr.in)
print_weather() {
    weather=$(curl -s "wttr.in/toronto?format=%c%20%p%20+%t%20(%f)%20󰖝%w")
    prin "${COLOR6}┃ ${COLOR4}  Weather⠀⠀⠀⠀⠀:   $weather${RESET}"
}

# Resource Usage Bars
print_bars() {
	info "${COLOR6}┃ ${COLOR4} " cpu
	info "${COLOR6}┃ ${COLOR4} " memory
}

# Combine all elements for a cohesive output
print_info() {
    display_info         # Main info block
	prin $divider_top    # Start of other info block
    print_local_ip       #  Local IP Address
    print_public_ip      #  Public IP Address
    print_song           #  Now Playing info
    print_weather        #  Weather forecast
	prin $divider_bottom # End of other info block
	print_motd           # MOTD Block
    #print_palette       # Show theme colours
	prin $divider_top    # Start of Systen Resource usage block
	print_bars           #  Print graphs
	prin $divider_bottom # End of sys resource block
	
}

# Custom Dividers for a clean layout
divider_top="${COLOR6}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${RESET}"
divider_bottom="${COLOR6}┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${RESET}"

# Disable unwanted sections for a cleaner look
#print_disk() { :; }
#print_battery() { :; }
#print_gpu() { :; }
#print_resolution() { :; }

